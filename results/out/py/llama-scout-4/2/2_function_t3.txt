To address this question, let's consider the purpose of `compact_times()` and its implications on KPI (Key Performance Indicator) sets, both cumulative and non-cumulative.

The method `compact_times()` seems to be related to optimizing or updating time-related data, possibly by aggregating or removing redundant information. When considering whether to call `compact_times()` on every KPI set or only on cumulative KPI sets, we need to think about the nature of the data and the requirements of the application.

1. **Understanding KPI Sets**: 
   - **Cumulative KPI Sets**: These are aggregated over a period, providing a summary of performance metrics up to a certain point. They are useful for trend analysis and understanding overall system performance over time.
   - **Non-Cumulative KPI Sets**: These provide snapshots of performance at specific points in time or over short intervals. They are useful for real-time monitoring and quick assessments.

2. **Purpose of `compact_times()`**:
   - If `compact_times()` is aimed at optimizing storage or improving performance by aggregating or removing redundant time data, it makes sense to apply it where data accumulation is most significant, which is typically in cumulative KPI sets.

3. **Considerations**:
   - **Data Integrity and Accuracy**: Applying `compact_times()` across all KPI sets could introduce inconsistencies if the method alters the data in a way that's not suitable for all types of analysis.
   - **Performance**: On the other hand, applying it only to cumulative KPI sets might be more efficient, as it targets where data aggregation is most beneficial.

4. **Decision Making**:
   - If the primary goal of `compact_times()` is to maintain a manageable and meaningful dataset for long-term analysis, applying it to cumulative KPI sets seems most appropriate.
   - However, if real-time or short-term analysis also requires optimized data handling, a more nuanced approach might be needed, possibly involving different strategies for different types of KPI sets.

Given these considerations, the decision hinges on the specific requirements of your application, including how data is analyzed, the importance of real-time versus cumulative data, and the system's performance constraints.

<answer>
You should call `compact_times()` on cumulative KPI sets. This approach optimizes data storage and analysis for long-term trends without potentially disrupting real-time or short-term data analysis. 
</answer>
</end_header_id|end_header_id